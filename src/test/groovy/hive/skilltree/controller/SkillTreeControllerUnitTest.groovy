package hive.skilltree.controller

import hive.skilltree.entity.SkillTree
import hive.skilltree.repository.SkillTreeRepository
import org.springframework.test.web.servlet.MockMvc
import org.springframework.test.web.servlet.setup.MockMvcBuilders
import spock.lang.Shared
import spock.lang.Specification

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*
import static hive.pandora.constant.HiveInternalHeaders.AUTHENTICATED_USER_ID

class SkillTreeControllerUnitTest extends Specification {

    def urlBase = 'http://localhost:9600/'
    @Shared SkillTree player
    MockMvc mockMvc
    SkillTreeRepository playerRepository = Mock()

    def validProfileDataJson = '''
        {
          "Lesson":"string",
          "DaysOfWeek":"string",
          "LastExercise":"string",
          "NextExamDate":"Date",
          "ProgressPercentage":"0-100",
          "Teacher":"String<userId>"
        }
                        '''
    def setup(){
        createAnPlayer()
        mockMvc = MockMvcBuilders.standaloneSetup(new SkillTreeController(playerRepository)).build()
    }

    def '''
        Given ,
        when ,
        then .
        '''(){

        given:
        def invalidProfileDataJson='{"lessonId":10}'

        when:
        def response=mockMvc.perform(post("$urlBase")
                .header(AUTHENTICATED_USER_ID,1)
                .contentType('application/json')
                .content(invalidProfileDataJson))
                .andReturn()
                .getResponse()

        then:
        response.getStatus()==400
        response.getErrorMessage()=="The autogenerated lessonId should not be in JSON"

    }
}
